.data:
	enter: .asciiz "\n"
string0:	.asciiz"x = "
string1:	.asciiz"y = "
string2:	.asciiz"SWAP x = "
string3:	.asciiz"SWAP y = "
string4:	.asciiz"OVERFLOW!"
string5:	.asciiz"complete number: "
string6:	.asciiz"  "
string7:	.asciiz" "
string8:	.asciiz"---------------------------------------------------------------"
string9:	.asciiz"'water flower'number is:"
string10:	.asciiz"  "
string11:	.asciiz" "
string12:	.asciiz"---------------------------------------------------------------"
string13:	.asciiz" "
string14:	.asciiz" "
string15:	.asciiz"The total is "
string16:	.asciiz"5 != "
.text:
j main
factorial:
	sw	$ra,	4	($sp)
	lw	$s0,	12	($sp)
	sw	$s0,	0	($sp)
	bgt	$s0,	1,	label_if_head0
	li	$v0,	1
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
	j	label_if_tail0
label_if_head0:
label_if_tail0:
	addiu	$t0,	$s0,	-1
	sw	$t0,	-20	($sp)
	sw	$s0,	0	($sp)
	sw	$sp,	-24	($sp)
	addiu	$sp,	$sp,	-32
	jal	factorial
	lw	$s0,	0	($sp)
	move	$t1,	$v0
	mult	$s0,	$t1
	mflo	$t2
	move	$v0,	$t2
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
mod:
	sw	$ra,	4	($sp)
	lw	$s0,	16	($sp)
	sw	$s0,	0	($sp)
	lw	$s1,	12	($sp)
	sw	$s1,	-4	($sp)
	div	$s0,	$s1
	mflo	$t0
	mult	$t0,	$s1
	mflo	$t1
	subu	$t2,	$s0,	$t1
	move	$s0,	$t2
	move	$v0,	$s0
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
swap:
	sw	$ra,	4	($sp)
	lw	$s0,	16	($sp)
	sw	$s0,	0	($sp)
	lw	$s1,	12	($sp)
	sw	$s1,	-4	($sp)
	la	$a0,	string0
	li	$v0,	4
	syscall
	move	$a0,	$s0
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	la	$a0,	string1
	li	$v0,	4
	syscall
	move	$a0,	$s1
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	move	$s2,	$s0
	move	$s0,	$s1
	move	$s1,	$s2
	la	$a0,	string2
	li	$v0,	4
	syscall
	move	$a0,	$s0
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	la	$a0,	string3
	li	$v0,	4
	syscall
	move	$a0,	$s1
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
full_num:
	sw	$ra,	4	($sp)
	lw	$s0,	20	($sp)
	sw	$s0,	0	($sp)
	lw	$s1,	16	($sp)
	sw	$s1,	-4	($sp)
	lw	$s2,	12	($sp)
	sw	$s2,	-8	($sp)
	li	$t9,	100
	mult	$s0,	$t9
	mflo	$t0
	li	$t9,	10
	mult	$s1,	$t9
	mflo	$t1
	addu	$t2,	$t0,	$t1
	addu	$t3,	$t2,	$s2
	move	$v0,	$t3
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
flower_num:
	sw	$ra,	4	($sp)
	lw	$s0,	20	($sp)
	sw	$s0,	0	($sp)
	lw	$s1,	16	($sp)
	sw	$s1,	-4	($sp)
	lw	$s2,	12	($sp)
	sw	$s2,	-8	($sp)
	mult	$s0,	$s0
	mflo	$t0
	mult	$t0,	$s0
	mflo	$t1
	mult	$s1,	$s1
	mflo	$t2
	mult	$t2,	$s1
	mflo	$t3
	addu	$t4,	$t1,	$t3
	mult	$s2,	$s2
	mflo	$t5
	mult	$t5,	$s2
	mflo	$t6
	addu	$t7,	$t4,	$t6
	move	$v0,	$t7
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
complete_flower_num:
	sw	$ra,	4	($sp)
	li	$s0,	2
label_for_begin1:
	bge	$s0,	128,	label_for_end1
	li	$t0,	-1
	move	$s1,	$t0
	move	$s2,	$s0
	li	$s3,	1
label_for_begin2:
	bge	$s3,	$s0,	label_for_end2
	div	$s0,	$s3
	mflo	$t0
	mult	$t0,	$s3
	mflo	$t1
	move	$s4,	$t1
	move	$s5,	$s0
	move	$s6,	$s3
	div	$s5,	$s6
	mflo	$t0
	mult	$t0,	$s6
	mflo	$t1
	subu	$t2,	$s5,	$t1
	move	$s5,	$t2
	move	$t0,	$s5
	bne	$t0,	0,	label_if_head3
	addiu	$t1,	$s1,	1
	move	$s1,	$t1
	subu	$t0,	$s2,	$s3
	move	$s2,	$t0
	blt	$s1,	128,	label_if_head4
	la	$a0,	string4
	li	$v0,	4
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	j	label_if_tail4
label_if_head4:
	sll	$t9,	$s1,	2
	subu	$t9,	$sp,	$t9
	sw	$s3,	0	($t9)
label_if_tail4:
	j	label_if_tail3
label_if_head3:
label_if_tail3:
	addiu	$s3,	$s3,	1
	j	label_for_begin2
label_for_end2:
	bne	$s2,	0,	label_if_head5
	la	$a0,	string5
	li	$v0,	4
	syscall
	move	$a0,	$s0
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	li	$s3,	0
label_for_begin6:
	bgt	$s3,	$s1,	label_for_end6
	sll	$t9,	$s3,	2
	subu	$t9,	$sp,	$t9
	lw	$t0,	0	($t9)
	la	$a0,	string10
	li	$v0,	4
	syscall
	move	$a0,	$t0
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	addiu	$s3,	$s3,	1
	j	label_for_begin6
label_for_end6:
	la	$a0,	string14
	li	$v0,	4
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	j	label_if_tail5
label_if_head5:
label_if_tail5:
	addiu	$s0,	$s0,	1
	j	label_for_begin1
label_for_end1:
	la	$a0,	string12
	li	$v0,	4
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	la	$a0,	string9
	li	$v0,	4
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	li	$s7,	0
	li	$s3,	100
label_for_begin7:
	li	$t0,	228
	bge	$s3,	$t0,	label_for_end7
	li	$t9,	100
	div	$s3,	$t9
	mflo	$t1
	move	$s1,	$t1
	li	$t9,	10
	div	$s3,	$t9
	mflo	$t0
	move	$s5,	$t0
	li	$s6,	10
	div	$s5,	$s6
	mflo	$t1
	mult	$t1,	$s6
	mflo	$t2
	subu	$t3,	$s5,	$t2
	move	$s5,	$t3
	move	$t0,	$s5
	move	$s0,	$t0
	move	$s5,	$s3
	li	$s6,	10
	div	$s5,	$s6
	mflo	$t0
	mult	$t0,	$s6
	mflo	$t1
	subu	$t2,	$s5,	$t1
	move	$s5,	$t2
	move	$t0,	$s5
	move	$a1,	$t0
	move	$a2,	$s1
	move	$a3,	$s0
	move	$fp,	$a1
	li	$t9,	100
	mult	$a2,	$t9
	mflo	$t0
	li	$t9,	10
	mult	$a3,	$t9
	mflo	$t1
	addu	$t2,	$t0,	$t1
	addu	$t3,	$t2,	$fp
	move	$t0,	$t3
	move	$a2,	$s1
	move	$a3,	$s0
	move	$fp,	$a1
	mult	$a2,	$a2
	mflo	$t1
	mult	$t1,	$a2
	mflo	$t2
	mult	$a3,	$a3
	mflo	$t3
	mult	$t3,	$a3
	mflo	$t4
	addu	$t5,	$t2,	$t4
	mult	$fp,	$fp
	mflo	$t6
	mult	$t6,	$fp
	mflo	$t7
	addu	$t1,	$t5,	$t7
	move	$t2,	$t1
	bne	$t0,	$t2,	label_if_head8
	sll	$t9,	$s7,	2
	subu	$t9,	$sp,	$t9
	sw	$s3,	0	($t9)
	addiu	$t0,	$s7,	1
	move	$s7,	$t0
	j	label_if_tail8
label_if_head8:
label_if_tail8:
	addiu	$s3,	$s3,	1
	j	label_for_begin7
label_for_end7:
	li	$s3,	0
label_for_begin9:
	bge	$s3,	$s7,	label_for_end9
	sll	$t9,	$s3,	2
	subu	$t9,	$sp,	$t9
	lw	$t0,	0	($t9)
	la	$a0,	string10
	li	$v0,	4
	syscall
	move	$a0,	$t0
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	addiu	$s3,	$s3,	1
	j	label_for_begin9
label_for_end9:
	la	$a0,	string14
	li	$v0,	4
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	la	$a0,	string12
	li	$v0,	4
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	li	$t8,	0
	sw	$t8,	-544	($sp)
	li	$t8,	1
	sw	$t8,	-548	($sp)
	li	$t8,	2
	sw	$t8,	-536	($sp)
label_for_begin10:
	lw	$t9,	-536	($sp)
	bgt	$t9,	128,	label_for_end10
	lw	$t8,	-536	($sp)
	li	$t9,	2
	div	$t8,	$t9
	mflo	$t0
	move	$t8,	$t0
	sw	$t8,	-540	($sp)
	li	$s3,	2
label_for_begin11:
	lw	$t9,	-540	($sp)
	bgt	$s3,	$t9,	label_for_end11
	lw	$t8,	-536	($sp)
	div	$t8,	$s3
	mflo	$t0
	mult	$t0,	$s3
	mflo	$t1
	move	$t8,	$t1
	sw	$t8,	-552	($sp)
	lw	$t9,	-536	($sp)
	move	$s5,	$t9
	move	$s6,	$s3
	div	$s5,	$s6
	mflo	$t0
	mult	$t0,	$s6
	mflo	$t1
	subu	$t2,	$s5,	$t1
	move	$s5,	$t2
	move	$t0,	$s5
	bne	$t0,	0,	label_if_head12
	lw	$t8,	-548	($sp)
	li	$t8,	0
	sw	$t8,	-548	($sp)
	j	label_if_tail12
label_if_head12:
label_if_tail12:
	addiu	$s3,	$s3,	1
	j	label_for_begin11
label_for_end11:
	lw	$t9,	-548	($sp)
	bne	$t9,	1,	label_if_head13
	la	$a0,	string14
	li	$v0,	4
	syscall
	lw	$t8,	-536	($sp)
	move	$a0,	$t8
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	lw	$t8,	-544	($sp)
	addiu	$t0,	$t8,	1
	lw	$t8,	-544	($sp)
	move	$t8,	$t0
	sw	$t8,	-544	($sp)
	lw	$t8,	-544	($sp)
	li	$t9,	10
	div	$t8,	$t9
	mflo	$t1
	li	$t9,	10
	mult	$t1,	$t9
	mflo	$t0
	lw	$t8,	-552	($sp)
	move	$t8,	$t0
	sw	$t8,	-552	($sp)
	lw	$t8,	-552	($sp)
	lw	$t9,	-544	($sp)
	bne	$t8,	$t9,	label_if_head14
	la	$a0,	string14
	li	$v0,	4
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	j	label_if_tail14
label_if_head14:
label_if_tail14:
	j	label_if_tail13
label_if_head13:
label_if_tail13:
	lw	$t8,	-548	($sp)
	li	$t8,	1
	sw	$t8,	-548	($sp)
	lw	$t8,	-536	($sp)
	lw	$t8,	-536	($sp)
	addiu	$t8,	$t8,	1
	sw	$t8,	-536	($sp)
	j	label_for_begin10
label_for_end10:
	la	$a0,	string15
	li	$v0,	4
	syscall
	lw	$t8,	-544	($sp)
	move	$a0,	$t8
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	lw	$ra,	4	($sp)
	lw	$sp,	8	($sp)
	jr	$ra
main:
	sw	$ra,	4	($sp)
	li	$t8,	5
	sw	$t8,	-8	($sp)
	sw	$sp,	-12	($sp)
	addiu	$sp,	$sp,	-20
	jal	factorial
	move	$t0,	$v0
	move	$s0,	$t0
	la	$a0,	string16
	li	$v0,	4
	syscall
	move	$a0,	$s0
	li	$v0,	1
	syscall
	la	$a0,	enter
	li	$v0,	4
	syscall
	li	$t8,	5
	sw	$t8,	-8	($sp)
	li	$t8,	10
	sw	$t8,	-12	($sp)
	sw	$s0,	0	($sp)
	sw	$sp,	-16	($sp)
	addiu	$sp,	$sp,	-24
	jal	swap
	lw	$s0,	0	($sp)
	sw	$s0,	0	($sp)
	sw	$sp,	-8	($sp)
	addiu	$sp,	$sp,	-16
	jal	complete_flower_num
	lw	$s0,	0	($sp)
	li	$v0,	10
	syscall
